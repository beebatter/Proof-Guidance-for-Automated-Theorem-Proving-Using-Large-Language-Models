(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status sat)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S2 S3) S1)
(declare-fun f4 (S4 S3) S2)
(declare-fun f5 () S4)
(declare-fun f6 () S3)
(declare-fun f7 (S5 S6) S3)
(declare-fun f8 () S5)
(declare-fun f9 (S7 S8) S6)
(declare-fun f10 () S7)
(declare-fun f11 () S8)
(declare-fun f12 (S10 S11) S1)
(declare-fun f13 (S12 S9) S10)
(declare-fun f14 () S12)
(declare-fun f15 (S13 S8) S11)
(declare-fun f16 () S13)
(declare-fun f17 (S7 S9) S3)
(declare-fun f18 (S14 S3) S3)
(assert (not (= f1 f2)))
(assert (not (= (f3 (f4 f5 f6) (f7 f8 (f9 f10 f11))) f1)))
(assert (forall ((?v0 S9)) (=> (= (f12 (f13 f14 ?v0) (f15 f16 f11)) f1) (not (= (f17 f10 ?v0) f6)))))
(assert (forall ((?v0 S9)) (=> (= (f12 (f13 f14 ?v0) (f15 f16 f11)) f1) (not (= (f17 f10 ?v0) f6)))))
(assert (forall ((?v0 S3) (?v1 S3)) (or (= (f3 (f4 f5 ?v0) ?v1) f1) (or (= ?v0 ?v1) (= (f3 (f4 f5 ?v1) ?v0) f1)))))
(assert (forall ((?v0 S3)) (not (= (f3 (f4 f5 ?v0) ?v0) f1))))
(assert (forall ((?v0 S3) (?v1 S3)) (= (not (= ?v0 ?v1)) (or (= (f3 (f4 f5 ?v0) ?v1) f1) (= (f3 (f4 f5 ?v1) ?v0) f1)))))
(assert (forall ((?v0 S3) (?v1 S3)) (= (not (= (f3 (f4 f5 ?v0) ?v1) f1)) (or (= (f3 (f4 f5 ?v1) ?v0) f1) (= ?v0 ?v1)))))
(assert (forall ((?v0 S3) (?v1 S3)) (or (= (f3 (f4 f5 ?v0) ?v1) f1) (or (= ?v0 ?v1) (= (f3 (f4 f5 ?v1) ?v0) f1)))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (not (= (f3 (f4 f5 ?v0) ?v1) f1)) (= (not (= (f3 (f4 f5 ?v1) ?v0) f1)) (= ?v1 ?v0)))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (not (= ?v0 ?v1)) (=> (=> (= (f3 (f4 f5 ?v0) ?v1) f1) false) (=> (=> (= (f3 (f4 f5 ?v1) ?v0) f1) false) false)))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (not (= ?v0 ?v1)) (=> (=> (= (f3 (f4 f5 ?v0) ?v1) f1) false) (=> (=> (= (f3 (f4 f5 ?v1) ?v0) f1) false) false)))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (= (f3 (f4 f5 ?v0) ?v1) f1) (not (= ?v0 ?v1)))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (= (f3 (f4 f5 ?v0) ?v1) f1) (not (= (f3 (f4 f5 ?v1) ?v0) f1)))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (= (f3 (f4 f5 ?v0) ?v1) f1) (= (not (= (f3 (f4 f5 ?v1) ?v0) f1)) true))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (= (f3 (f4 f5 ?v0) ?v1) f1) (= (= ?v0 ?v1) false))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (=> (= (f3 (f4 f5 ?v0) ?v1) f1) false) (=> (=> (= ?v0 ?v1) false) (=> (=> (= (f3 (f4 f5 ?v1) ?v0) f1) false) false)))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (= (f3 (f4 f5 ?v0) ?v1) f1) (=> (=> (not false) (= (f3 (f4 f5 ?v1) ?v0) f1)) false))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S3)) (let ((?v_0 (f4 f5 ?v2))) (=> (= (f3 (f4 f5 ?v0) ?v1) f1) (=> (= (f3 ?v_0 ?v0) f1) (= (f3 ?v_0 ?v1) f1))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S3)) (let ((?v_0 (f4 f5 ?v0))) (=> (= (f3 ?v_0 ?v1) f1) (=> (= (f3 (f4 f5 ?v1) ?v2) f1) (= (f3 ?v_0 ?v2) f1))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S3)) (=> (= (f3 (f4 f5 ?v0) ?v1) f1) (=> (= ?v0 ?v2) (= (f3 (f4 f5 ?v2) ?v1) f1)))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S3)) (let ((?v_0 (f4 f5 ?v0))) (=> (= (f3 ?v_0 ?v1) f1) (=> (= ?v1 ?v2) (= (f3 ?v_0 ?v2) f1))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S3)) (let ((?v_0 (f4 f5 ?v2))) (=> (= ?v0 ?v1) (=> (= (f3 ?v_0 ?v1) f1) (= (f3 ?v_0 ?v0) f1))))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S3)) (=> (= ?v0 ?v1) (=> (= (f3 (f4 f5 ?v1) ?v2) f1) (= (f3 (f4 f5 ?v0) ?v2) f1)))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (= (f3 (f4 f5 ?v0) ?v1) f1) (=> (= (f3 (f4 f5 ?v1) ?v0) f1) false))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (= (f3 (f4 f5 ?v0) ?v1) f1) (=> (= (f3 (f4 f5 ?v1) ?v0) f1) false))))
(assert (forall ((?v0 S3) (?v1 S3) (?v2 S1)) (=> (= (f3 (f4 f5 ?v0) ?v1) f1) (= (=> (= (f3 (f4 f5 ?v1) ?v0) f1) (= ?v2 f1)) true))))
(assert (forall ((?v0 S3) (?v1 S3)) (=> (= (f3 (f4 f5 ?v0) ?v1) f1) (= (= ?v1 ?v0) false))))
(assert (forall ((?v0 S7) (?v1 S8) (?v2 S7)) (= (= (f9 ?v0 ?v1) (f9 ?v2 ?v1)) (forall ((?v3 S9)) (=> (= (f12 (f13 f14 ?v3) (f15 f16 ?v1)) f1) (= (f17 ?v0 ?v3) (f17 ?v2 ?v3)))))))
(assert (forall ((?v0 S3) (?v1 S14) (?v2 S3) (?v3 S3)) (=> (= ?v0 (f18 ?v1 ?v2)) (=> (= (f3 (f4 f5 ?v3) ?v2) f1) (=> (forall ((?v4 S3) (?v5 S3)) (=> (= (f3 (f4 f5 ?v5) ?v4) f1) (= (f3 (f4 f5 (f18 ?v1 ?v5)) (f18 ?v1 ?v4)) f1))) (= (f3 (f4 f5 (f18 ?v1 ?v3)) ?v0) f1))))))
(check-sat)
(exit)
